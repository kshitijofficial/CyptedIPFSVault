// controllers/authController.js

const ethers = require('ethers');
const jwt = require('jsonwebtoken');
const UserModel = require("../models/User");
async function authenticate(req, res, next) {
    try {
        const { signature } = req.body;
        const { accountAddress } = req.query;
        if (!signature) {
            return res.status(401).json({ message: 'Authentication failed!' });
        }

        const recoveredAddress = ethers.utils.verifyMessage("Authentication message", signature);

        if (accountAddress.toLowerCase() === recoveredAddress.toLowerCase()) {
            const token = jwt.sign({ accountAddress }, 'secretKey');
             // Check if user already exists
            let user = await UserModel.findOne({ userId: recoveredAddress.toLowerCase() });

            // If user doesn't exist, create new user
            if (!user) {
                user = await UserModel.create({
                    userId: recoveredAddress.toLowerCase(),
                });
            }

            return res.status(200).json({ message: "Authentication Successful!", token });
        } else {
            return res.status(404).json({ authenticated: false, message: 'Authentication Failed!' });
        }
    } catch (error) {
        return res.status(500).json({ message: "Internal Server Error" });
    }
}

module.exports = {
    authenticate
};
